{"version":3,"sources":["../Ocelot.js"],"names":["Pjax","el","events","defaultOpts","endpoint","method","timeout","callback","callbackTimeout","push","self","history","pushState","window","onpopstate","changePage","location","pathname","console","warn","url","event","customOpts","opts","Object","keys","forEach","key","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","status","setTimeout","temp","document","createElement","innerHTML","responseText","querySelector","pageEvent","addEventListener","e","target","nodeName","preventDefault","attributes","value"],"mappings":"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","file":"Ocelot.js","sourcesContent":["/*\n *\n *  Ocelot.js\n *  Declan Tyson\n *  v0.3.0\n *  12/01/2017\n *\n */\n\nclass Pjax {\n    constructor(el = 'ocelot-content') {\n        // The element to watch\n        this.el = el;\n\n        // Page-specific events\n        this.events = {};\n\n        // Default changePage options\n        this.defaultOpts = { endpoint : false, method : 'GET', timeout : 0, callback : null, callbackTimeout : 0, push : true};\n\n        let self = this;\n        if(history.pushState) {\n            window.onpopstate = function() {\n                // Change page without pushing new entry to the history\n                self.changePage({\n                    endpoint : window.location.pathname,\n                    push: false\n                });\n            };\n        } else {\n            console.warn('Ocelot: this browser does not support history.pushState. Hash changing is coming soon.')\n        }\n    }\n\n    setEvent(url, event) {\n        this.events[url] = event;\n    }\n\n    changePage(customOpts = {}) {\n        let opts = this.defaultOpts;\n\n        Object.keys(customOpts).forEach((key) => {\n            opts[key] = customOpts[key];\n        });\n\n        if(!opts.endpoint) console.warn('Ocelot: a PJAX endpoint is required.');\n\n        // AJAX call made to endpoint\n        let xhr = new XMLHttpRequest();\n        xhr.open(opts.method, opts.endpoint, true);\n        xhr.send();\n        xhr.onreadystatechange = () => {\n            if(xhr.readyState !== 4) return;\n            if(xhr.status !== 200) {\n                console.warn(`Ocelot: ${opts.method} ${opts.endpoint} returned ${xhr.status}.`);\n                return;\n            }\n\n            // Set a timeout in case of any transition animations\n            setTimeout(() => {\n                // Get only AJAX-friendly content, we don't want to duplicate the CSS and JavaScript\n                let temp = document.createElement('div');\n                temp.innerHTML = xhr.responseText;\n                document.querySelector(`#${this.el}`).innerHTML = temp.querySelector(`#${this.el}`).innerHTML;\n\n                // Perform any page-specific events\n                let pageEvent = this.events[opts.endpoint];\n                if(pageEvent) {\n                    if(typeof pageEvent !== 'function') {\n                        console.warn(`Ocelot: ${opts.endpoint} event must be a function, instead found ${typeof pageEvent}.`);\n                        return;\n                    }\n                    pageEvent();\n                }\n            }, opts.timeout);\n\n            // Perform callback function (if any)\n            setTimeout(function(){\n                if(opts.callback === null) return;\n                if(typeof opts.callback !== 'function') {\n                    console.warn(`Ocelot: Callback must be a function, instead found ${typeof opts.callback}.`);\n                    return;\n                }\n\n                opts.callback(xhr.responseText);\n            }, opts.callbackTimeout);\n\n            // Push to browser history to allow for back/forward\n            if(opts.push) history.pushState('', 'New URL: ' + opts.endpoint, opts.endpoint);\n        }\n    }\n\n    all(opts = {}) {\n        document.addEventListener(\"click\", (e) => {\n            if(e.target.nodeName === \"A\") {\n                e.preventDefault();\n                opts.endpoint = e.target.attributes[\"href\"].value;\n                this.changePage(opts);\n            }\n        });\n    }\n}\n\nexport { Pjax };"]}